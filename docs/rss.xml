<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>GitHub - CN Blog</title><link>https://Owenwoow.github.io/aws</link><description>GitHub - CN Blog</description><copyright>GitHub - CN Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/157098070?v=4</url><title>avatar</title><link>https://Owenwoow.github.io/aws</link></image><lastBuildDate>Fri, 27 Dec 2024 12:33:00 +0000</lastBuildDate><managingEditor>GitHub - CN Blog</managingEditor><ttl>60</ttl><webMaster>GitHub - CN Blog</webMaster><item><title>架构优化和安全要点</title><link>https://Owenwoow.github.io/aws/post/jia-gou-you-hua-he-an-quan-yao-dian.html</link><description>### 目标组&#13;
&#13;
1. 目标组取消注册 60 和负载auth冷却时间设置 60 &#13;
2. 负载平衡算法 ， 最少未完成的请求&#13;
&#13;
&#13;
&#13;
### Cloudfront&#13;
&#13;
1. 安全性(waf): 启用Sql保护&#13;
&#13;
2. 源：&#13;
&#13;
   - 启用**启用 Origin Shield**&#13;
&#13;
3. 缓存：&#13;
&#13;
![image-20241223170027480](https://github.com/user-attachments/assets/5d8f1800-ec7b-4699-8a7c-d96a51de7b16)&#13;
&#13;
&#13;
4. Logging&#13;
&#13;
   - 创建s3日志&#13;
   - 创建cloudwatch日志&#13;
&#13;
&#13;
&#13;
### ELB&#13;
&#13;
1. 修改安全组，保证最佳实践&#13;
2. 属性&#13;
   - 开启删除保护&#13;
   - 开启访问日志和连接日志&#13;
&#13;
&#13;
&#13;
### SNS&#13;
&#13;
SQS 队列需要允许 SNS 发布消息。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/jia-gou-you-hua-he-an-quan-yao-dian.html</guid><pubDate>Mon, 23 Dec 2024 14:39:59 +0000</pubDate></item><item><title>nekobox的使用</title><link>https://Owenwoow.github.io/aws/post/nekobox-de-shi-yong.html</link><description>NekoBox:https://github.com/Matsuridayo/nekoray/releases&#13;
![image](https://github.com/user-attachments/assets/d85df53f-3888-4202-9837-2d8975aaa994)&#13;
&#13;
免费配置链接：&#13;
&#13;
```&#13;
hy2://{your passwd}@148.135.103.83:1080?mport=60000,41000-43000&amp;insecure=1&amp;sni=www.bing.com#CC&#13;
```。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/nekobox-de-shi-yong.html</guid><pubDate>Thu, 12 Dec 2024 02:04:46 +0000</pubDate></item><item><title>Docker集群</title><link>https://Owenwoow.github.io/aws/post/Docker-ji-qun.html</link><description>&#13;
容器的集群&#13;
&#13;
# Docker Compose&#13;
&#13;
-----&#13;
&#13;
### 简介：&#13;
&#13;
Docker compose 可以用来轻松高效的管理容器，定义多个容器的启动。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/Docker-ji-qun.html</guid><pubDate>Tue, 26 Nov 2024 01:03:32 +0000</pubDate></item><item><title>Docker基础</title><link>https://Owenwoow.github.io/aws/post/Docker-ji-chu.html</link><description>&#13;
# Docker基础&#13;
&#13;
## docker的安装和卸载&#13;
&#13;
&gt; 安装docker&#13;
&#13;
根据官方文档安装&#13;
&#13;
&#13;
&#13;
&gt; docker 的 卸载&#13;
&#13;
```shell&#13;
# 1、卸载依赖&#13;
&#13;
# 1、卸载资源&#13;
rm -rf /var/lib/docker &#13;
&#13;
# /var/lib/docker docker 的默认存放路径&#13;
```&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
## 第一个docker应用&#13;
&#13;
&gt; 使用 sudo docker run hello-world&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
## docker的常用命令&#13;
&#13;
### docker的帮助命令&#13;
&#13;
```shell&#13;
docker version		# 显示docker的版本信息&#13;
docker info 		# 显示docker的系统级信息&#13;
docker 命令 --help   # 查看docker命令&#13;
```&#13;
&#13;
帮助文档地址：https://docs.docker.com/reference/&#13;
&#13;
&#13;
&#13;
### 镜像命令&#13;
&#13;
##### **docker images**&#13;
&#13;
```shell&#13;
[root@ip-10-0-1-102 ~]# docker images &#13;
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE&#13;
hello-world   latest    d2c94e258dcb   18 months ago   13.3kB&#13;
&#13;
&#13;
# 解释&#13;
REPOSITORY   镜像的仓库源&#13;
TAG			 镜像的标签&#13;
IMAGE ID     镜像的id&#13;
CREATED      镜像的创建时间&#13;
SIZE		 镜像的大小&#13;
&#13;
# 可选项&#13;
  -a, --all             Show all images (default hides intermediate images)&#13;
  -q, --quiet           Only show image IDs&#13;
&#13;
```&#13;
&#13;
&#13;
&#13;
##### **docker search 命令搜索镜像%**&#13;
&#13;
```shell&#13;
[root@kuangshen /]# docker search mysql&#13;
NAME                DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED&#13;
mysql               MySQL is a widely used, open-source relation... 9494      [OK]       &#13;
mariadb             MariaDB is a community-developed fork of MyS... 3441      [OK]       &#13;
&#13;
# 可选项，通过搜索来过滤&#13;
--filter=STARS=3000    # 搜索出来的镜像就是STARS大于3000的&#13;
&#13;
[root@kuangshen /]# docker search mysql --filter=STARS=3000&#13;
NAME                DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED&#13;
mysql               MySQL is a widely used, open-source relation... 9494      [OK]       &#13;
mariadb             MariaDB is a community-developed fork of MyS... 3441      [OK]       &#13;
&#13;
[root@kuangshen /]# docker search mysql --filter=STARS=5000&#13;
NAME                DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED&#13;
mysql               MySQL is a widely used, open-source relation... 9494      [OK]&#13;
&#13;
```&#13;
&#13;
&#13;
&#13;
##### **docker pull 下载镜像**&#13;
&#13;
```shell&#13;
# 下载镜像 docker pull 镜像名[:tag]&#13;
[root@kuangshen /]  # docker pull mysql&#13;
Using default tag: latest  # 如果不写 tag，默认就是 latest&#13;
latest: Pulling from library/mysql&#13;
5b54d594fba7: Pull complete&#13;
07e7d6a8a868: Pull complete&#13;
abd946892310: Pull complete&#13;
dd8f4d07efa5: Pull complete&#13;
07d6396a6205: Pull complete&#13;
cf6b2b93048f: Pull complete&#13;
530904b4a8b7: Pull complete&#13;
fb1e55059a95: Pull complete&#13;
4bd29a0dcde8: Pull complete&#13;
b94a001c6ec7: Pull complete&#13;
cb77cbeb422b: Pull complete&#13;
2a35cdbd42cc: Pull complete&#13;
Digest: sha256:dc255ca50a42b358197000b1f9bab2b4e01d158d1a9f56c3db6ee145506f625  # 签名&#13;
Status: Downloaded newer image for mysql:latest&#13;
docker.io/library/mysql:latest  # 真实地址&#13;
&#13;
# 等价于它&#13;
docker pull mysql&#13;
docker pull docker.io/library/mysql:latest&#13;
&#13;
# 指定版本下载&#13;
[root@ip-10-0-1-102 ~]# docker pull mysql:8.0&#13;
8.0: Pulling from library/mysql&#13;
f1a9f94fc2db: Already exists   # 因为已经下载过了，所有没有下载。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/Docker-ji-chu.html</guid><pubDate>Tue, 26 Nov 2024 00:43:13 +0000</pubDate></item><item><title>使用systemd实现自启动</title><link>https://Owenwoow.github.io/aws/post/shi-yong-systemd-shi-xian-zi-qi-dong.html</link><description># systemd 实现服务自启动&#13;
&#13;
server.root服务&#13;
&#13;
##### 介绍：&#13;
&#13;
​	*如果要让任务开机自启动，需将对应的Unit文件存放于/etc/systemd/system下。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/shi-yong-systemd-shi-xian-zi-qi-dong.html</guid><pubDate>Mon, 18 Nov 2024 12:25:59 +0000</pubDate></item><item><title>数据库 连接 | 查询 | 创建（mysql&amp;postgresql)</title><link>https://Owenwoow.github.io/aws/post/shu-ju-ku-%20-lian-jie-%20-%20-cha-xun-%20-%20-chuang-jian-%EF%BC%88mysql%26postgresql%29.html</link><description>## 从实例连接mysql&#13;
&#13;
写入器url&#13;
&#13;
![image-20241029150715962](https://github.com/user-attachments/assets/e0f8e4f3-407c-410d-8737-cc7b4ba2d9fc)&#13;
&#13;
&#13;
&#13;
&#13;
```&#13;
# 用yum查询mariadb&#13;
yum list | grep maridb&#13;
&#13;
# 下载&#13;
yum inatall mariadb105&#13;
&#13;
&#13;
# 复制写入器url&#13;
# 登入数据库&#13;
mysql -u username -h url:\\ -p&#13;
&#13;
&#13;
# 查询数据库&#13;
show databases;&#13;
&#13;
&#13;
# 创建数据库&#13;
CREATE DATABASE 数据库名;&#13;
&#13;
&#13;
# 选择数据库&#13;
use suika;&#13;
&#13;
&#13;
```&#13;
&#13;
&#13;
&#13;
## 连接postgresql&#13;
&#13;
&#13;
```&#13;
# 用yum查询mariadb&#13;
yum list | grep postgresql&#13;
&#13;
# 下载&#13;
yum inatall postgresql16*&#13;
&#13;
&#13;
# 复制写入器url&#13;
# 登入数据库&#13;
psql -U hostname -h url:\\&#13;
&#13;
&#13;
# 查询数据库&#13;
\l&#13;
&#13;
&#13;
# 创建数据库&#13;
CREATE DATABASE 数据库名;&#13;
&#13;
&#13;
# 选择数据库&#13;
\c DBname&#13;
&#13;
.&#13;
```&#13;
。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/shu-ju-ku-%20-lian-jie-%20-%20-cha-xun-%20-%20-chuang-jian-%EF%BC%88mysql%26postgresql%29.html</guid><pubDate>Mon, 18 Nov 2024 12:16:55 +0000</pubDate></item><item><title>EFS mount </title><link>https://Owenwoow.github.io/aws/post/EFS%20mount%20.html</link><description># 挂载efs&#13;
&#13;
![image-20240810213122508](https://github.com/user-attachments/assets/e34dcaab-e97d-4520-b766-d63ef6c1e62b)&#13;
&#13;
&#13;
点击连接，选择了解跟多，查看官方教程&#13;
&#13;
##### 环境配置命令：&#13;
&#13;
```&#13;
yum install python3-pip -y&#13;
pip3 install botocore&#13;
yum install amazon-efs-utils -y &#13;
```&#13;
&#13;
&#13;
&#13;
##### 自动挂载助手&#13;
&#13;
- 要在IAM授权的情况下自动挂载到具有EC2实例配置文件的 Amazon 实例，请在`/etc/fstab`文件中添加以下行。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/EFS%20mount%20.html</guid><pubDate>Mon, 18 Nov 2024 12:01:36 +0000</pubDate></item><item><title>elb s3 logs 权限</title><link>https://Owenwoow.github.io/aws/post/elb%20s3%20logs%20-quan-xian.html</link><description>设置s3的权限https://docs.aws.amazon.com/elasticloadbalancing/latest/application/enable-access-logging.html&#13;
&#13;
该策略向指定的 Elastic Load Balancing 账户 ID 授予权限。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/elb%20s3%20logs%20-quan-xian.html</guid><pubDate>Mon, 18 Nov 2024 11:58:40 +0000</pubDate></item><item><title>剪断互联网线</title><link>https://Owenwoow.github.io/aws/post/jian-duan-hu-lian-wang-xian.html</link><description># **剪断互联网线！**&#13;
&#13;
![image-20241020094227557](https://github.com/user-attachments/assets/de9ef56a-169d-4be3-89cc-e5aab7ff90c8)&#13;
&#13;
&#13;
&#13;
## 任务 1：授予 Lambda 写访问权限！&#13;
&#13;
![image-20241020094412642](https://github.com/user-attachments/assets/deeff23d-9ac5-45b8-932c-c8265c5dd956)&#13;
&#13;
&#13;
https://docs.aws.amazon.com/zh_cn/IAM/latest/UserGuide/reference_policies_examples_dynamodb_specific-table.html&#13;
&#13;
Amazon DynamoDB：允许访问特定的表&#13;
&#13;
![image-20241020095112298](https://github.com/user-attachments/assets/9842250f-5f08-4189-bb4a-f36a4829cc19)&#13;
&#13;
&#13;
```json&#13;
{&#13;
    'Version': '2012-10-17',&#13;
    'Statement': [&#13;
        {&#13;
            'Sid': 'ListAndDescribe',&#13;
            'Effect': 'Allow',&#13;
            'Action': [&#13;
                'dynamodb:List*',&#13;
                'dynamodb:DescribeReservedCapacity*',&#13;
                'dynamodb:DescribeLimits',&#13;
                'dynamodb:DescribeTimeToLive'&#13;
            ],&#13;
            'Resource': '*'&#13;
        },&#13;
        {&#13;
            'Sid': 'SpecificTable',&#13;
            'Effect': 'Allow',&#13;
            'Action': [&#13;
                'dynamodb:BatchGet*',&#13;
                'dynamodb:DescribeStream',&#13;
                'dynamodb:DescribeTable',&#13;
                'dynamodb:Get*',&#13;
                'dynamodb:Query',&#13;
                'dynamodb:Scan',&#13;
                'dynamodb:BatchWrite*',&#13;
                'dynamodb:CreateTable',&#13;
                'dynamodb:Delete*',&#13;
                'dynamodb:Update*',&#13;
                'dynamodb:PutItem'&#13;
            ],&#13;
            'Resource': 'arn:aws:dynamodb:*:*:table/MyTable'&#13;
        }&#13;
    ]&#13;
}&#13;
```&#13;
&#13;
但是题目中已经创建了iam用户&#13;
&#13;
直接附加就行&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
## 任务 2：保护 Lambda！&#13;
&#13;
&#13;
&#13;
![image-20241020095614802](https://github.com/user-attachments/assets/609b734a-2ecf-486c-8abb-ec9ed40fdd12)&#13;
&#13;
&#13;
#### 1.将vpc附加到lamdba&#13;
&#13;
![image-20241020100631353](https://github.com/user-attachments/assets/4d4a40dc-d2d5-42b9-a0ce-bf461ded4ccb)&#13;
&#13;
&#13;
#### 2.创建dynamodb的终端节点&#13;
&#13;
1. 在 AWS 控制台中，导航到 VPC 仪表板。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/jian-duan-hu-lian-wang-xian.html</guid><pubDate>Thu, 07 Nov 2024 07:09:50 +0000</pubDate></item><item><title>[aws][jam]-11-查找隐藏在SQS队列中的秘密消息</title><link>https://Owenwoow.github.io/aws/post/%5Baws%5D%5Bjam%5D-11--cha-zhao-yin-cang-zai-SQS-dui-lie-zhong-de-mi-mi-xiao-xi.html</link><description>![image-20241020090503948](https://github.com/user-attachments/assets/9eddcc11-ebf9-4357-b21a-dfab5756a528)&#13;
&#13;
&#13;
**查找隐藏在SQS队列中的秘密消息！！**&#13;
&#13;
&#13;
&#13;
## 任务 1：为什么 lambda 函数超时？&#13;
&#13;
![image-20241020090727875](https://github.com/user-attachments/assets/e7470166-5294-4580-96a5-91a8bb4b36b3)&#13;
&#13;
&#13;
![image-20241020091242378](https://github.com/user-attachments/assets/5fc06da6-474d-48d5-8ee4-a22cca2fe7ab)&#13;
&#13;
&#13;
线索 2：如何访问我的 VPC 端点？&#13;
&#13;
更新附加到 VPC 端点的安全组的入站规则。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/%5Baws%5D%5Bjam%5D-11--cha-zhao-yin-cang-zai-SQS-dui-lie-zhong-de-mi-mi-xiao-xi.html</guid><pubDate>Thu, 07 Nov 2024 06:53:52 +0000</pubDate></item><item><title>自动检测iam用户并更改</title><link>https://Owenwoow.github.io/aws/post/zi-dong-jian-ce-iam-yong-hu-bing-geng-gai.html</link><description># 11-自动检测iam用户并更改&#13;
&#13;
### 任务 1：构建 IAM 评估 Lambda 函数&#13;
&#13;
第一项任务是构建一个 AWS Lambda 函数，以编程方式使用 IAM Access Analyzer 策略验证功能。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/zi-dong-jian-ce-iam-yong-hu-bing-geng-gai.html</guid><pubDate>Thu, 07 Nov 2024 06:33:22 +0000</pubDate></item><item><title>修改存储桶策略</title><link>https://Owenwoow.github.io/aws/post/xiu-gai-cun-chu-tong-ce-lve.html</link><description>### 任务 1：为您的 IAM 用户应用存储桶策略&#13;
&#13;
&#13;
&#13;
有 2 个拥有 IAM 账户的用户，USER-A 和 USER-B。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/xiu-gai-cun-chu-tong-ce-lve.html</guid><pubDate>Thu, 07 Nov 2024 05:54:02 +0000</pubDate></item><item><title>[aws][jam]-08-学习 Gateway 到 Transit Gateway</title><link>https://Owenwoow.github.io/aws/post/%5Baws%5D%5Bjam%5D-08--xue-xi-%20Gateway%20-dao-%20Transit%20Gateway.html</link><description>#学习 Gateway 到 Transit Gateway&#13;
&#13;
##任务1：&#13;
背景：&#13;
根据初始设置，您注意到某些内容阻止您访问 EC2 实例。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/%5Baws%5D%5Bjam%5D-08--xue-xi-%20Gateway%20-dao-%20Transit%20Gateway.html</guid><pubDate>Wed, 06 Nov 2024 06:13:51 +0000</pubDate></item><item><title>s3跨资源访问CORS</title><link>https://Owenwoow.github.io/aws/post/s3-kua-zi-yuan-fang-wen-CORS.html</link><description>```json&#13;
[&#13;
    {&#13;
        'AllowedHeaders': ['*'],&#13;
        'AllowedMethods': ['GET'],&#13;
        'AllowedOrigins': ['*'],&#13;
        'ExposeHeaders': []&#13;
    }&#13;
]&#13;
&#13;
```&#13;
官方配置文档&#13;
https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/userguide/ManageCorsUsing.html。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/s3-kua-zi-yuan-fang-wen-CORS.html</guid><pubDate>Wed, 06 Nov 2024 01:13:45 +0000</pubDate></item><item><title>[aws][jam]-06-加密数据湖</title><link>https://Owenwoow.github.io/aws/post/%5Baws%5D%5Bjam%5D-06--jia-mi-shu-ju-hu.html</link><description># 加密数据湖&#13;
&#13;
#### 概述&#13;
&#13;
您是 MuMuMango 的安全工程师，负责创建数据湖来存储公司销售的所有水果。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/%5Baws%5D%5Bjam%5D-06--jia-mi-shu-ju-hu.html</guid><pubDate>Mon, 04 Nov 2024 11:43:15 +0000</pubDate></item><item><title>排队等候！</title><link>https://Owenwoow.github.io/aws/post/pai-dui-deng-hou-%EF%BC%81.html</link><description># **排队等候！**&#13;
&#13;
### 概述&#13;
&#13;
背景您经营着一家电子商务初创公司，身兼数职。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/pai-dui-deng-hou-%EF%BC%81.html</guid><pubDate>Mon, 04 Nov 2024 11:38:30 +0000</pubDate></item><item><title>[aws][jam]-04-规模很好</title><link>https://Owenwoow.github.io/aws/post/%5Baws%5D%5Bjam%5D-04--gui-mo-hen-hao.html</link><description># 规模很好&#13;
&#13;
### 概述&#13;
&#13;
-----&#13;
&#13;
##### 客户有一个业务需求，即数据生产者应用程序需要将数据放入 Amazon Kinesis 数据流中。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/%5Baws%5D%5Bjam%5D-04--gui-mo-hen-hao.html</guid><pubDate>Mon, 04 Nov 2024 11:20:02 +0000</pubDate></item><item><title>[aws][jam]-03-照镜子</title><link>https://Owenwoow.github.io/aws/post/%5Baws%5D%5Bjam%5D-03--zhao-jing-zi.html</link><description>## 题目：&#13;
&#13;
#### 背景&#13;
&#13;
AnyCompany 网络上的一台受感染主机会定期向另一台主机发送信标。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/%5Baws%5D%5Bjam%5D-03--zhao-jing-zi.html</guid><pubDate>Fri, 01 Nov 2024 00:39:08 +0000</pubDate></item><item><title>失去的连接 - AWS VPC 和 DynamoDB 的故事</title><link>https://Owenwoow.github.io/aws/post/shi-qu-de-lian-jie-%20-%20AWS%20VPC%20-he-%20DynamoDB%20-de-gu-shi.html</link><description># **失去的连接 - AWS VPC 和 DynamoDB 的故事**&#13;
&#13;
### 概述&#13;
&#13;
曾几何时，在亚马逊网络服务的云王国中，存在着一个强大的虚拟私有云 (VPC)，由一个技术娴熟的无服务器战士 AWS Lambda 守护。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/shi-qu-de-lian-jie-%20-%20AWS%20VPC%20-he-%20DynamoDB%20-de-gu-shi.html</guid><pubDate>Thu, 24 Oct 2024 03:06:51 +0000</pubDate></item><item><title>创建iam 分配和创建用户/角色的权限</title><link>https://Owenwoow.github.io/aws/post/chuang-jian-iam%20-fen-pei-he-chuang-jian-yong-hu---jiao-se-de-quan-xian.html</link><description># 创建iam 分配和创建用户/角色的权限&#13;
&#13;
## 题目：&#13;
&#13;
### **背景**&#13;
&#13;
你需要创建 IAM 角色，这个角色可用于开发进行测试。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/chuang-jian-iam%20-fen-pei-he-chuang-jian-yong-hu---jiao-se-de-quan-xian.html</guid><pubDate>Thu, 24 Oct 2024 03:03:58 +0000</pubDate></item><item><title>解决负载均衡器不切换可用区</title><link>https://Owenwoow.github.io/aws/post/jie-jue-fu-zai-jun-heng-qi-bu-qie-huan-ke-yong-qu.html</link><description>问题：负载均衡器不切换可用区&#13;
解答：ec2控制台-目标组-选择目标组-属性-编辑-目标选择配置-开启跨区负载均衡&#13;
![image-20241016144343648](https://github.com/user-attachments/assets/542fc1e0-76fa-40d4-8777-dc41237b3a74)&#13;
![image-20241016144527650](https://github.com/user-attachments/assets/79e49d58-c65a-4b5d-9255-cb506e5c487a)&#13;
![image-20241016144624332](https://github.com/user-attachments/assets/1a8af7ee-c25b-49d7-9252-d8d516a8ad75)&#13;
![image-20241016145240404](https://github.com/user-attachments/assets/914860ba-0308-4df7-a25e-55f333ef3f7a)&#13;
&#13;
&lt;!-- ##{'script':'&lt;script src='https://blog.meekdai.com/Gmeek/plugins/GmeekTOC.js'&gt;&lt;/script&gt;'}## --&gt;&#13;
。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/jie-jue-fu-zai-jun-heng-qi-bu-qie-huan-ke-yong-qu.html</guid><pubDate>Thu, 24 Oct 2024 03:00:58 +0000</pubDate></item><item><title>000-AWS-blog-test</title><link>https://Owenwoow.github.io/aws/post/000-AWS-blog-test.html</link><description>THIS IS OWEN_W'S AWS BLOG。</description><guid isPermaLink="true">https://Owenwoow.github.io/aws/post/000-AWS-blog-test.html</guid><pubDate>Thu, 24 Oct 2024 01:43:28 +0000</pubDate></item></channel></rss>